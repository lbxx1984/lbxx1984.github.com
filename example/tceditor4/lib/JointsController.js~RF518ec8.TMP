// JavaScript Document
function JointsController(camera, scene){
	
	var _points=[];
	var _oldpos=new THREE.Vector3(camera.position.x,camera.position.y,camera.position.z);
	var _demo=new THREE.Mesh(
		new THREE.SphereGeometry(10,4,4),
		new THREE.MeshBasicMaterial({color:0xfff000,side:THREE.DoubleSide})
	);
	var _isWorking=false;
	var _baseRule=1000;
	var _geo=null;
	
	_demo.scale.x=_demo.scale.y=_demo.scale.z=1.5;
	
	for(var n=0;n<100;n++){
		_points.push(_demo.clone());
		_points[n].added=false;	
	}
	
	//刷新，以控制锚点大小
	function update(){
		if(!_isWorking){return;}
		var newPos=new THREE.Vector3(camera.position.x,camera.position.y,camera.position.z);
		if(_oldpos.equals(newPos)){return;}
		_oldpos=newPos;
		for(var n=0;n<_points.length;n++){
			if(_points[n].added==false){break;}	
			_points[n].scale.x=_points[n].scale.y=_points[n].scale.z=
			_oldpos.distanceTo(
				new THREE.Vector3(_points[n].position.x,_points[n].position.y,_points[n].position.z)
			)/_baseRule;
		}
	}
	
	//绑定物体
	function attach(geo){
		if(_geo==geo || !geo) return;
		_geo=geo;
		for(var n=0;n<_points.length;n++){
			if(_points[n].added==false){break;}	
		}
		alert(geo.id);
	}
	
	return {
		update:function(){update();},
		setSize:function(value){_baseRule=value;},
		attach:function(geo){attach(geo);}
	}
}